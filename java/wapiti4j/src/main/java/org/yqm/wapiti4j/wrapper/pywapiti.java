/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.yqm.wapiti4j.wrapper;

public class pywapiti {
  public static void tag_label(mdl_s mdl, SWIGTYPE_p_FILE fin, SWIGTYPE_p_FILE fout) {
    pywapitiJNI.tag_label(mdl_s.getCPtr(mdl), mdl, SWIGTYPE_p_FILE.getCPtr(fin), SWIGTYPE_p_FILE.getCPtr(fout));
  }

  public static void tag_seq(mdl_s mdl, fancy_raw_s raw_seq, fancy_raw_s tag_seq) {
    pywapitiJNI.tag_seq(mdl_s.getCPtr(mdl), mdl, fancy_raw_s.getCPtr(raw_seq), raw_seq, fancy_raw_s.getCPtr(tag_seq), tag_seq);
  }

  public static mdl_s mdl_new(rdr_s rdr) {
    long cPtr = pywapitiJNI.mdl_new(rdr_s.getCPtr(rdr), rdr);
    return (cPtr == 0) ? null : new mdl_s(cPtr, false);
  }

  public static void mdl_free(mdl_s mdl) {
    pywapitiJNI.mdl_free(mdl_s.getCPtr(mdl), mdl);
  }

  public static void mdl_sync(mdl_s mdl) {
    pywapitiJNI.mdl_sync(mdl_s.getCPtr(mdl), mdl);
  }

  public static void mdl_compact(mdl_s mdl) {
    pywapitiJNI.mdl_compact(mdl_s.getCPtr(mdl), mdl);
  }

  public static void mdl_save(mdl_s mdl, SWIGTYPE_p_FILE file) {
    pywapitiJNI.mdl_save(mdl_s.getCPtr(mdl), mdl, SWIGTYPE_p_FILE.getCPtr(file));
  }

  public static void mdl_load(mdl_s mdl, SWIGTYPE_p_FILE file) {
    pywapitiJNI.mdl_load(mdl_s.getCPtr(mdl), mdl, SWIGTYPE_p_FILE.getCPtr(file));
  }

  public static void mdl_save_path(mdl_s mdl, String file_path) {
    pywapitiJNI.mdl_save_path(mdl_s.getCPtr(mdl), mdl, file_path);
  }

  public static void mdl_load_path(mdl_s mdl, String file_path) {
    pywapitiJNI.mdl_load_path(mdl_s.getCPtr(mdl), mdl, file_path);
  }

  public static opt_s getOpt_defaults() {
    long cPtr = pywapitiJNI.opt_defaults_get();
    return (cPtr == 0) ? null : new opt_s(cPtr, false);
  }

  public static void opt_parse(int argc, SWIGTYPE_p_p_char argv, opt_s opt) {
    pywapitiJNI.opt_parse(argc, SWIGTYPE_p_p_char.getCPtr(argv), opt_s.getCPtr(opt), opt);
  }

  public static void setUit_stop(boolean value) {
    pywapitiJNI.uit_stop_set(value);
  }

  public static boolean getUit_stop() {
    return pywapitiJNI.uit_stop_get();
  }

  public static void uit_setup(mdl_s mdl) {
    pywapitiJNI.uit_setup(mdl_s.getCPtr(mdl), mdl);
  }

  public static void uit_cleanup(mdl_s mdl) {
    pywapitiJNI.uit_cleanup(mdl_s.getCPtr(mdl), mdl);
  }

  public static boolean uit_progress(mdl_s mdl, long it, double obj) {
    return pywapitiJNI.uit_progress(mdl_s.getCPtr(mdl), mdl, it, obj);
  }

  public static SWIGTYPE_p_qrk_s qrk_new() {
    long cPtr = pywapitiJNI.qrk_new();
    return (cPtr == 0) ? null : new SWIGTYPE_p_qrk_s(cPtr, false);
  }

  public static void qrk_free(SWIGTYPE_p_qrk_s qrk) {
    pywapitiJNI.qrk_free(SWIGTYPE_p_qrk_s.getCPtr(qrk));
  }

  public static long qrk_count(SWIGTYPE_p_qrk_s qrk) {
    return pywapitiJNI.qrk_count(SWIGTYPE_p_qrk_s.getCPtr(qrk));
  }

  public static boolean qrk_lock(SWIGTYPE_p_qrk_s qrk, boolean lock) {
    return pywapitiJNI.qrk_lock(SWIGTYPE_p_qrk_s.getCPtr(qrk), lock);
  }

  public static String qrk_id2str(SWIGTYPE_p_qrk_s qrk, long id) {
    return pywapitiJNI.qrk_id2str(SWIGTYPE_p_qrk_s.getCPtr(qrk), id);
  }

  public static long qrk_str2id(SWIGTYPE_p_qrk_s qrk, String key) {
    return pywapitiJNI.qrk_str2id(SWIGTYPE_p_qrk_s.getCPtr(qrk), key);
  }

  public static void qrk_load(SWIGTYPE_p_qrk_s qrk, SWIGTYPE_p_FILE file) {
    pywapitiJNI.qrk_load(SWIGTYPE_p_qrk_s.getCPtr(qrk), SWIGTYPE_p_FILE.getCPtr(file));
  }

  public static void qrk_save(SWIGTYPE_p_qrk_s qrk, SWIGTYPE_p_FILE file) {
    pywapitiJNI.qrk_save(SWIGTYPE_p_qrk_s.getCPtr(qrk), SWIGTYPE_p_FILE.getCPtr(file));
  }

  public static rdr_s rdr_new(boolean autouni) {
    long cPtr = pywapitiJNI.rdr_new(autouni);
    return (cPtr == 0) ? null : new rdr_s(cPtr, false);
  }

  public static void rdr_free(rdr_s rdr) {
    pywapitiJNI.rdr_free(rdr_s.getCPtr(rdr), rdr);
  }

  public static void rdr_freeraw(raw_s raw) {
    pywapitiJNI.rdr_freeraw(raw_s.getCPtr(raw), raw);
  }

  public static void rdr_freeseq(seq_s seq) {
    pywapitiJNI.rdr_freeseq(seq_s.getCPtr(seq), seq);
  }

  public static void rdr_freedat(dat_s dat) {
    pywapitiJNI.rdr_freedat(dat_s.getCPtr(dat), dat);
  }

  public static void rdr_free_fancy_raw(fancy_raw_s raw) {
    pywapitiJNI.rdr_free_fancy_raw(fancy_raw_s.getCPtr(raw), raw);
  }

  public static fancy_raw_s rdr_new_fancy_raw() {
    long cPtr = pywapitiJNI.rdr_new_fancy_raw();
    return (cPtr == 0) ? null : new fancy_raw_s(cPtr, false);
  }

  public static void rdr_add_raw_line(fancy_raw_s raw, String line, long len) {
    pywapitiJNI.rdr_add_raw_line(fancy_raw_s.getCPtr(raw), raw, line, len);
  }

  public static String rdr_get_raw_line(fancy_raw_s raw, long id) {
    return pywapitiJNI.rdr_get_raw_line(fancy_raw_s.getCPtr(raw), raw, id);
  }

  public static void rdr_loadpat(rdr_s rdr, SWIGTYPE_p_FILE file) {
    pywapitiJNI.rdr_loadpat(rdr_s.getCPtr(rdr), rdr, SWIGTYPE_p_FILE.getCPtr(file));
  }

  public static raw_s rdr_readraw(rdr_s rdr, SWIGTYPE_p_FILE file) {
    long cPtr = pywapitiJNI.rdr_readraw(rdr_s.getCPtr(rdr), rdr, SWIGTYPE_p_FILE.getCPtr(file));
    return (cPtr == 0) ? null : new raw_s(cPtr, false);
  }

  public static seq_s rdr_raw2seq(rdr_s rdr, raw_s raw, boolean lbl) {
    long cPtr = pywapitiJNI.rdr_raw2seq(rdr_s.getCPtr(rdr), rdr, raw_s.getCPtr(raw), raw, lbl);
    return (cPtr == 0) ? null : new seq_s(cPtr, false);
  }

  public static seq_s rdr_fancyraw2seq(rdr_s rdr, fancy_raw_s raw, boolean lbl) {
    long cPtr = pywapitiJNI.rdr_fancyraw2seq(rdr_s.getCPtr(rdr), rdr, fancy_raw_s.getCPtr(raw), raw, lbl);
    return (cPtr == 0) ? null : new seq_s(cPtr, false);
  }

  public static seq_s rdr_readseq(rdr_s rdr, SWIGTYPE_p_FILE file, boolean lbl) {
    long cPtr = pywapitiJNI.rdr_readseq(rdr_s.getCPtr(rdr), rdr, SWIGTYPE_p_FILE.getCPtr(file), lbl);
    return (cPtr == 0) ? null : new seq_s(cPtr, false);
  }

  public static dat_s rdr_readdat(rdr_s rdr, SWIGTYPE_p_FILE file, boolean lbl) {
    long cPtr = pywapitiJNI.rdr_readdat(rdr_s.getCPtr(rdr), rdr, SWIGTYPE_p_FILE.getCPtr(file), lbl);
    return (cPtr == 0) ? null : new dat_s(cPtr, false);
  }

  public static void rdr_load(rdr_s rdr, SWIGTYPE_p_FILE file) {
    pywapitiJNI.rdr_load(rdr_s.getCPtr(rdr), rdr, SWIGTYPE_p_FILE.getCPtr(file));
  }

  public static void rdr_save(rdr_s rdr, SWIGTYPE_p_FILE file) {
    pywapitiJNI.rdr_save(rdr_s.getCPtr(rdr), rdr, SWIGTYPE_p_FILE.getCPtr(file));
  }

  public static String rdr_readline(SWIGTYPE_p_FILE file) {
    return pywapitiJNI.rdr_readline(SWIGTYPE_p_FILE.getCPtr(file));
  }

  public static void fatal(String msg) {
    pywapitiJNI.fatal(msg);
  }

  public static void pfatal(String msg) {
    pywapitiJNI.pfatal(msg);
  }

  public static void warning(String msg) {
    pywapitiJNI.warning(msg);
  }

  public static void info(String msg) {
    pywapitiJNI.info(msg);
  }

  public static SWIGTYPE_p_void xmalloc(long size) {
    long cPtr = pywapitiJNI.xmalloc(size);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void xrealloc(SWIGTYPE_p_void ptr, long size) {
    long cPtr = pywapitiJNI.xrealloc(SWIGTYPE_p_void.getCPtr(ptr), size);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static String xstrdup(String str) {
    return pywapitiJNI.xstrdup(str);
  }

  public static String ns_readstr(SWIGTYPE_p_FILE file) {
    return pywapitiJNI.ns_readstr(SWIGTYPE_p_FILE.getCPtr(file));
  }

  public static void ns_writestr(SWIGTYPE_p_FILE file, String str) {
    pywapitiJNI.ns_writestr(SWIGTYPE_p_FILE.getCPtr(file), str);
  }

  public static SWIGTYPE_p_FILE fancy_fopen(String file_path, String mode) {
    long cPtr = pywapitiJNI.fancy_fopen(file_path, mode);
    return (cPtr == 0) ? null : new SWIGTYPE_p_FILE(cPtr, false);
  }

  public static int fancy_fclose(SWIGTYPE_p_FILE file) {
    return pywapitiJNI.fancy_fclose(SWIGTYPE_p_FILE.getCPtr(file));
  }

  public static void trn_lbfgs(mdl_s mdl) {
    pywapitiJNI.trn_lbfgs(mdl_s.getCPtr(mdl), mdl);
  }

  public static void trn_sgdl1(mdl_s mdl) {
    pywapitiJNI.trn_sgdl1(mdl_s.getCPtr(mdl), mdl);
  }

  public static void trn_bcd(mdl_s mdl) {
    pywapitiJNI.trn_bcd(mdl_s.getCPtr(mdl), mdl);
  }

  public static void trn_rprop(mdl_s mdl) {
    pywapitiJNI.trn_rprop(mdl_s.getCPtr(mdl), mdl);
  }

}
